---
trigger: none
parameters:
- name: platforms
  type: object
  default: []
  values:
  - x64
  - x86
pool:
  vmImage: windows-latest
steps:
- checkout: self
  persistCredentials: true
  clean: true
- task: VisualStudioTestPlatformInstaller@1
  displayName: Visual Studio Test Platform Installer
  inputs:
    versionSelector: specificVersion
    testPlatformVersion: "$(testPlatformVersion)"
- "${{ each platform in parameters.platforms }}":
  - template: "../Common/copy-addons.yml"
    parameters:
      BuildConfiguration: Release
      BuildPlatform: "${{platform}}"
  - template: "../common/copy-crossplatform.yml"
    parameters:
      BuildConfiguration: Release
      BuildPlatform: "${{platform}}"
- task: NuGetToolInstaller@1
  displayName: Use NuGet 5.2.0
  inputs:
    versionSpec: 5.2.0
- task: InlinePowershell@1
  displayName: Generate NuGet.config to Temp directory
  enabled: false
  inputs:
    Script: "param(\n  $nugetExecutablePath,\n  $configPath,\n  $jfroguser,\n  $jfrogpassword\n)\n\n@\"\n<?xml
      version=\"1.0\" encoding=\"utf-8\"?>\n<configuration/>\n\"@ | Set-Content $configPath\n
      \ \n& \"$nugetExecutablePath\" sources add -Name \"OrgNugets\" -Source \"https://artifactory.organization.com:443/artifactory/OrgNugets/\"
      -Config $configPath -username \"$jfroguser\" -password \"$jfrogpassword\"\n"
    ScriptArguments: '"C:\Program Files\org\tool\nuget.exe" "$(Agent.TempDirectory)\NuGet.config"
      $(JFrogUser) $(agentpassword)'
- task: InlinePowerShell@1
  displayName: Create Artifact Directories
  inputs:
    Script: |
      New-Item "$(Agent.TempDirectory)\BuildArtifacts" -ItemType "directory"
      New-Item "$(Agent.TempDirectory)\DatabaseArtifacts" -ItemType "directory"
- task: ArtifactoryGenericUpload@2
  displayName: Publish Build Artifacts
  inputs:
    artifactoryService: https://artifactory.example.com
    specSource: taskConfiguration
    fileSpec: |
      {
       "files": [
        {
         "pattern": "$(Agent.TempDirectory)/BuildArtifacts/*.zip",
         "target": "project/BuildArtifacts/$(Build.BuildId)/",
         "exclusions": ["Sources.zip"]
        }
       ]
      }
    failNoOp: true
- task: ProjectModifier@13
  displayName: ProjectModifier (Sources)
  inputs:
    PathToEdit: "$(Build.SourcesDirectory)\\Sources"
    TargetFrameworkVersion: "$(TargetFrameworkVersion)"
    TargetVsVersion: "$(VisualStudioToolsVersion)"
    MakeCheckin: 'False'
    ChosenPlatforms: x86,x64,win32
    SourceBranch: "${{parameters.TargetBranch}}"
    SourceRootDirectory: "$(Build.SourcesDirectory)\\"
    FileExtensions: "*.shfbproj *.sln *.csproj GlobalAssemblyInfo.cs *.ism *.vsixmanifest
      module_sw_version.h AssemblyInfo.cs"
- task: CheckinFolder@4
  displayName: CheckinFolder
  condition: and(succeeded(), eq(variables.isMain, true))
  inputs:
    WorkspacePath: "$(Build.SourcesDirectory)\\tool"
    CheckInComment: PreBuild Checkins
    SourceBranch: "$(Build.SourceBranch)"
